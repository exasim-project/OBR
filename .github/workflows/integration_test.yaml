name: Integration tests
run-name: Integration test on ${{github.ref_name}}


on:
  workflow_call

env:
  BUILD_TYPE: Release
  FOAM_INST_DIR: /root/OpenFOAM
  WM_PROJECT: OpenFOAM
  WM_OPTIONS: linux64GccDPInt32Opt
  WM_COMPILER_TYPE: system
  WM_COMPILER: Gcc
  WM_PRECISION_OPTION: DP
  WM_LABEL_SIZE: 32
  WM_COMPILE_OPTION: Opt
  WM_OSTYPE: POSIX
  WM_ARCH: linux64
  WM_ARCH_OPTION: 64
  WM_LINK_LANGUAGE: c++
  WM_LABEL_OPTION:  Int32
  OMPI_ALLOW_RUN_AS_ROOT: 1
  OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1

jobs:
  integration-test:
    runs-on: ubuntu-latest
    container: greole/ofbase

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        apt-get update
        apt install -y pip rename
        python3 -m pip install --upgrade pip

    - name: Install package
      run: |
        python3 -m pip install .

    - name: Source OF enviroment
      run: |
        mkdir -p $FOAM_INST_DIR
        echo "WM_PROJECT_DIR=$FOAM_INST_DIR/openfoam" >> $GITHUB_ENV
        echo "FOAM_USER_PATH=$FOAM_INST_DIR/root-v2212"     >> $GITHUB_ENV
        echo "FOAM_ETC=$FOAM_INST_DIR/openfoam/etc" >> $GITHUB_ENV
        echo "FOAM_TUTORIALS=$FOAM_INST_DIR/openfoam/tutorials" >> $GITHUB_ENV
        echo "FOAM_USER_LIBBIN=$FOAM_INST_DIR/root-v2212/platforms/linux64GccDPInt32Opt/lib"     >> $GITHUB_ENV
        echo "FOAM_SRC=$FOAM_INST_DIR/openfoam/src"     >> $GITHUB_ENV
        echo "OMPI_MCA_btl_vader_single_copy_mechanism=none" >> $GITHUB_ENV

    - name: Run obr
      run: |
        export PATH=$WM_PROJECT_DIR/platforms/linux64GccDPInt32Opt/bin:$PATH
        export LD_LIBRARY_PATH=$FOAM_USER_LIBBIN:$WM_PROJECT_DIR/platforms/linux64GccDPInt32Opt/lib:$WM_PROJECT_DIR/platforms/linux64GccDPInt32Opt/lib/sys-openmpi/:$WM_PROJECT_DIR/platforms/linux64GccDPInt32Opt/lib/dummy/:$LD_LIBRARY_PATH

        obr init --config tests/cavity.yaml
        obr run -o generate
        obr run -o runSerialSolver
        obr status

    - name: Validate state of simulations
      run: |
        obr query -q global --filter global==completed --validate_against tests/cavity_results.json

    - name: Rename log files
      if: always()
      run: |
        find . -name "*:*" -exec rename 's|:|-|g' {} \;

    - name: Archive production artifacts
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: integration_test
        path: ${{github.workspace}}
