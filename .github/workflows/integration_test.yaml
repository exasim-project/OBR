name: Tests

on:
  - push
  - pull_request

env:
  BUILD_TYPE: Release
  FOAM_INST_DIR: /root/OpenFOAM
  WM_PROJECT: OpenFOAM
  WM_OPTIONS: linux64GccDPInt32Opt
  WM_COMPILER_TYPE: system
  WM_COMPILER: Gcc
  WM_PRECISION_OPTION: DP
  WM_LABEL_SIZE: 32
  WM_COMPILE_OPTION: Opt
  WM_OSTYPE: POSIX
  WM_ARCH: linux64
  WM_ARCH_OPTION: 64
  WM_LINK_LANGUAGE: c++
  WM_LABEL_OPTION:  Int32
  OMPI_ALLOW_RUN_AS_ROOT: 1
  OMPI_ALLOW_RUN_AS_ROOT_CONFIRM: 1

jobs:
  integration-test:
    runs-on: ubuntu-latest
    container: greole/ofbase

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        apt-get update
        apt install -y pip rename
        python3 -m pip install --upgrade pip

    - name: Install package
      run: |
        python3 -m pip install .

    - name: Source OF enviroment
      run: |
        mkdir -p $FOAM_INST_DIR
        echo "WM_PROJECT_DIR=$FOAM_INST_DIR/${{matrix.OF.path}}" >> $GITHUB_ENV
        echo "FOAM_USER_PATH=$FOAM_INST_DIR/root-${{matrix.OF.version}}"     >> $GITHUB_ENV
        echo "FOAM_ETC=$FOAM_INST_DIR/${{matrix.OF.path}}/etc" >> $GITHUB_ENV
        echo "FOAM_TUTORIALS=$FOAM_INST_DIR/${{matrix.OF.path}}/tutorials" >> $GITHUB_ENV
        echo "FOAM_USER_LIBBIN=$FOAM_INST_DIR/root-${{matrix.OF.version}}/platforms/linux64GccDPInt32Opt/lib"     >> $GITHUB_ENV
        echo "FOAM_SRC=$FOAM_INST_DIR/${{matrix.OF.path}}/src"     >> $GITHUB_ENV
        echo "OMPI_MCA_btl_vader_single_copy_mechanism=none" >> $GITHUB_ENV

    - name: Run obr
      run: |
        export FOAM_ETC=/root/OpenFOAM/openfoam/etc/
        export FOAM_TUTORIALS=/root/OpenFOAM/openfoam/tutorials
        export PATH=/root/OpenFOAM/user-v2212/platforms/linux64GccDPInt32Opt/bin:/root/OpenFOAM/openfoam/site/2212/platforms/linux64GccDPInt32Opt/bin:/root/OpenFOAM/openfoam/platforms/linux64GccDPInt32Opt/bin:/root/OpenFOAM/openfoam/bin:/root/OpenFOAM/openfoam/wmake:$PATH
        export LD_LIBRARY_PATH=/root/OpenFOAM/user-v2212/platforms/linux64GccDPInt32Opt/lib:/root/OpenFOAM/openfoam/site/2212/platforms/linux64GccDPInt32Opt/lib:/root/OpenFOAM/openfoam/platforms/linux64GccDPInt32Opt/lib/sys-openmpi:/root/OpenFOAM/openfoam/platforms/linux64GccDPInt32Opt/lib:/root/OpenFOAM/openfoam/ThirdParty/platforms/linux64Gcc/fftw-3.3.10/lib64:/root/OpenFOAM/openfoam/ThirdParty/platforms/linux64Gcc/CGAL-4.14.3/lib64:/root/OpenFOAM/openfoam/ThirdParty/platforms/linux64Gcc/boost_1_74_0/lib64:/usr/lib/x86_64-linux-gnu/openmpi/lib:/root/OpenFOAM/openfoam/platforms/linux64GccDPInt32Opt/lib/dummy
        obr init --config tests/cavity.yaml
        obr run -o fetchCase
        obr run -o generate
        obr run -o runSerialSolver -t 1
        obr status

    - name: Validate state of simulations
      run: |
        obr query -q global --validate tests/cavity_results.json

    - name: Rename log files
      if: always()
      run: |
        find . -name "*:*" -exec rename 's|:|-|g' {} \;

    - name: Archive production artifacts
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: integration_test
        path: ${{github.workspace}}
